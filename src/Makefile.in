# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = seabattle$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_seabattle_OBJECTS = seabattle-main.$(OBJEXT) \
	seabattle-print_enemy.$(OBJEXT) \
	seabattle-print_friendly.$(OBJEXT) \
	seabattle-read_coords.$(OBJEXT) \
	seabattle-print_field.$(OBJEXT) seabattle-Cell.$(OBJEXT) \
	seabattle-check_winner.$(OBJEXT) seabattle-Config.$(OBJEXT) \
	seabattle-create_player.$(OBJEXT) \
	seabattle-create_players.$(OBJEXT) \
	seabattle-emplace_ships.$(OBJEXT) seabattle-Field.$(OBJEXT) \
	seabattle-finalize_field.$(OBJEXT) \
	seabattle-Fitting_ship.$(OBJEXT) seabattle-Player.$(OBJEXT) \
	seabattle-run_game.$(OBJEXT) seabattle-Ship.$(OBJEXT) \
	seabattle-shot.$(OBJEXT) seabattle-input_name.$(OBJEXT) \
	seabattle-print_winner.$(OBJEXT) \
	seabattle-draw_frame.$(OBJEXT) \
	seabattle-draw_frame_around_cell.$(OBJEXT) \
	seabattle-print_fields.$(OBJEXT)
seabattle_OBJECTS = $(am_seabattle_OBJECTS)
seabattle_LDADD = $(LDADD)
seabattle_LINK = $(CCLD) $(seabattle_CFLAGS) $(CFLAGS) \
	$(seabattle_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(seabattle_SOURCES)
DIST_SOURCES = $(seabattle_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
seabattle_SOURCES = main.c \
		    print_enemy.c \
		    print_friendly.c \
		    read_coords.c \
		    print_field.c \
		    Cell.c \
		    Cell.h \
		    check_winner.c \
		    Config.c \
		    Config.h \
		    create_player.c \
		    create_players.c \
		    emplace_ships.c \
		    Field.c \
		    Field.h \
		    finalize_field.c \
		    Fitting_ship.c \
		    Fitting_ship.h \
		    Player.c \
		    Player.h \
		    run_game.c \
		    seabattle_utils.h \
		    Ship.c \
		    Ship.h \
		    shot.c \
		    UI.h \
		    input_name.c \
		    print_winner.c \
		    draw_frame.c \
		    draw_frame_around_cell.c \
		    print_fields.c

seabattle_LDFLAGS = -lncurses
AM_CFLAGS = -Wall -pedantic
seabattle_CFLAGS = $(AM_CFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
seabattle$(EXEEXT): $(seabattle_OBJECTS) $(seabattle_DEPENDENCIES) 
	@rm -f seabattle$(EXEEXT)
	$(seabattle_LINK) $(seabattle_OBJECTS) $(seabattle_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Cell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Fitting_ship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-Ship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-check_winner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-create_player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-create_players.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-draw_frame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-draw_frame_around_cell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-emplace_ships.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-finalize_field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-input_name.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-print_enemy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-print_field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-print_fields.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-print_friendly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-print_winner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-read_coords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-run_game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seabattle-shot.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

seabattle-main.o: main.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-main.o -MD -MP -MF $(DEPDIR)/seabattle-main.Tpo -c -o seabattle-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-main.Tpo $(DEPDIR)/seabattle-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='seabattle-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

seabattle-main.obj: main.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-main.obj -MD -MP -MF $(DEPDIR)/seabattle-main.Tpo -c -o seabattle-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-main.Tpo $(DEPDIR)/seabattle-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='seabattle-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

seabattle-print_enemy.o: print_enemy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_enemy.o -MD -MP -MF $(DEPDIR)/seabattle-print_enemy.Tpo -c -o seabattle-print_enemy.o `test -f 'print_enemy.c' || echo '$(srcdir)/'`print_enemy.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_enemy.Tpo $(DEPDIR)/seabattle-print_enemy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_enemy.c' object='seabattle-print_enemy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_enemy.o `test -f 'print_enemy.c' || echo '$(srcdir)/'`print_enemy.c

seabattle-print_enemy.obj: print_enemy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_enemy.obj -MD -MP -MF $(DEPDIR)/seabattle-print_enemy.Tpo -c -o seabattle-print_enemy.obj `if test -f 'print_enemy.c'; then $(CYGPATH_W) 'print_enemy.c'; else $(CYGPATH_W) '$(srcdir)/print_enemy.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_enemy.Tpo $(DEPDIR)/seabattle-print_enemy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_enemy.c' object='seabattle-print_enemy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_enemy.obj `if test -f 'print_enemy.c'; then $(CYGPATH_W) 'print_enemy.c'; else $(CYGPATH_W) '$(srcdir)/print_enemy.c'; fi`

seabattle-print_friendly.o: print_friendly.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_friendly.o -MD -MP -MF $(DEPDIR)/seabattle-print_friendly.Tpo -c -o seabattle-print_friendly.o `test -f 'print_friendly.c' || echo '$(srcdir)/'`print_friendly.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_friendly.Tpo $(DEPDIR)/seabattle-print_friendly.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_friendly.c' object='seabattle-print_friendly.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_friendly.o `test -f 'print_friendly.c' || echo '$(srcdir)/'`print_friendly.c

seabattle-print_friendly.obj: print_friendly.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_friendly.obj -MD -MP -MF $(DEPDIR)/seabattle-print_friendly.Tpo -c -o seabattle-print_friendly.obj `if test -f 'print_friendly.c'; then $(CYGPATH_W) 'print_friendly.c'; else $(CYGPATH_W) '$(srcdir)/print_friendly.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_friendly.Tpo $(DEPDIR)/seabattle-print_friendly.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_friendly.c' object='seabattle-print_friendly.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_friendly.obj `if test -f 'print_friendly.c'; then $(CYGPATH_W) 'print_friendly.c'; else $(CYGPATH_W) '$(srcdir)/print_friendly.c'; fi`

seabattle-read_coords.o: read_coords.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-read_coords.o -MD -MP -MF $(DEPDIR)/seabattle-read_coords.Tpo -c -o seabattle-read_coords.o `test -f 'read_coords.c' || echo '$(srcdir)/'`read_coords.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-read_coords.Tpo $(DEPDIR)/seabattle-read_coords.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='read_coords.c' object='seabattle-read_coords.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-read_coords.o `test -f 'read_coords.c' || echo '$(srcdir)/'`read_coords.c

seabattle-read_coords.obj: read_coords.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-read_coords.obj -MD -MP -MF $(DEPDIR)/seabattle-read_coords.Tpo -c -o seabattle-read_coords.obj `if test -f 'read_coords.c'; then $(CYGPATH_W) 'read_coords.c'; else $(CYGPATH_W) '$(srcdir)/read_coords.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-read_coords.Tpo $(DEPDIR)/seabattle-read_coords.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='read_coords.c' object='seabattle-read_coords.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-read_coords.obj `if test -f 'read_coords.c'; then $(CYGPATH_W) 'read_coords.c'; else $(CYGPATH_W) '$(srcdir)/read_coords.c'; fi`

seabattle-print_field.o: print_field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_field.o -MD -MP -MF $(DEPDIR)/seabattle-print_field.Tpo -c -o seabattle-print_field.o `test -f 'print_field.c' || echo '$(srcdir)/'`print_field.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_field.Tpo $(DEPDIR)/seabattle-print_field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_field.c' object='seabattle-print_field.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_field.o `test -f 'print_field.c' || echo '$(srcdir)/'`print_field.c

seabattle-print_field.obj: print_field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_field.obj -MD -MP -MF $(DEPDIR)/seabattle-print_field.Tpo -c -o seabattle-print_field.obj `if test -f 'print_field.c'; then $(CYGPATH_W) 'print_field.c'; else $(CYGPATH_W) '$(srcdir)/print_field.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_field.Tpo $(DEPDIR)/seabattle-print_field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_field.c' object='seabattle-print_field.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_field.obj `if test -f 'print_field.c'; then $(CYGPATH_W) 'print_field.c'; else $(CYGPATH_W) '$(srcdir)/print_field.c'; fi`

seabattle-Cell.o: Cell.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Cell.o -MD -MP -MF $(DEPDIR)/seabattle-Cell.Tpo -c -o seabattle-Cell.o `test -f 'Cell.c' || echo '$(srcdir)/'`Cell.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Cell.Tpo $(DEPDIR)/seabattle-Cell.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Cell.c' object='seabattle-Cell.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Cell.o `test -f 'Cell.c' || echo '$(srcdir)/'`Cell.c

seabattle-Cell.obj: Cell.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Cell.obj -MD -MP -MF $(DEPDIR)/seabattle-Cell.Tpo -c -o seabattle-Cell.obj `if test -f 'Cell.c'; then $(CYGPATH_W) 'Cell.c'; else $(CYGPATH_W) '$(srcdir)/Cell.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Cell.Tpo $(DEPDIR)/seabattle-Cell.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Cell.c' object='seabattle-Cell.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Cell.obj `if test -f 'Cell.c'; then $(CYGPATH_W) 'Cell.c'; else $(CYGPATH_W) '$(srcdir)/Cell.c'; fi`

seabattle-check_winner.o: check_winner.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-check_winner.o -MD -MP -MF $(DEPDIR)/seabattle-check_winner.Tpo -c -o seabattle-check_winner.o `test -f 'check_winner.c' || echo '$(srcdir)/'`check_winner.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-check_winner.Tpo $(DEPDIR)/seabattle-check_winner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='check_winner.c' object='seabattle-check_winner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-check_winner.o `test -f 'check_winner.c' || echo '$(srcdir)/'`check_winner.c

seabattle-check_winner.obj: check_winner.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-check_winner.obj -MD -MP -MF $(DEPDIR)/seabattle-check_winner.Tpo -c -o seabattle-check_winner.obj `if test -f 'check_winner.c'; then $(CYGPATH_W) 'check_winner.c'; else $(CYGPATH_W) '$(srcdir)/check_winner.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-check_winner.Tpo $(DEPDIR)/seabattle-check_winner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='check_winner.c' object='seabattle-check_winner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-check_winner.obj `if test -f 'check_winner.c'; then $(CYGPATH_W) 'check_winner.c'; else $(CYGPATH_W) '$(srcdir)/check_winner.c'; fi`

seabattle-Config.o: Config.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Config.o -MD -MP -MF $(DEPDIR)/seabattle-Config.Tpo -c -o seabattle-Config.o `test -f 'Config.c' || echo '$(srcdir)/'`Config.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Config.Tpo $(DEPDIR)/seabattle-Config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Config.c' object='seabattle-Config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Config.o `test -f 'Config.c' || echo '$(srcdir)/'`Config.c

seabattle-Config.obj: Config.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Config.obj -MD -MP -MF $(DEPDIR)/seabattle-Config.Tpo -c -o seabattle-Config.obj `if test -f 'Config.c'; then $(CYGPATH_W) 'Config.c'; else $(CYGPATH_W) '$(srcdir)/Config.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Config.Tpo $(DEPDIR)/seabattle-Config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Config.c' object='seabattle-Config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Config.obj `if test -f 'Config.c'; then $(CYGPATH_W) 'Config.c'; else $(CYGPATH_W) '$(srcdir)/Config.c'; fi`

seabattle-create_player.o: create_player.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-create_player.o -MD -MP -MF $(DEPDIR)/seabattle-create_player.Tpo -c -o seabattle-create_player.o `test -f 'create_player.c' || echo '$(srcdir)/'`create_player.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-create_player.Tpo $(DEPDIR)/seabattle-create_player.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='create_player.c' object='seabattle-create_player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-create_player.o `test -f 'create_player.c' || echo '$(srcdir)/'`create_player.c

seabattle-create_player.obj: create_player.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-create_player.obj -MD -MP -MF $(DEPDIR)/seabattle-create_player.Tpo -c -o seabattle-create_player.obj `if test -f 'create_player.c'; then $(CYGPATH_W) 'create_player.c'; else $(CYGPATH_W) '$(srcdir)/create_player.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-create_player.Tpo $(DEPDIR)/seabattle-create_player.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='create_player.c' object='seabattle-create_player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-create_player.obj `if test -f 'create_player.c'; then $(CYGPATH_W) 'create_player.c'; else $(CYGPATH_W) '$(srcdir)/create_player.c'; fi`

seabattle-create_players.o: create_players.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-create_players.o -MD -MP -MF $(DEPDIR)/seabattle-create_players.Tpo -c -o seabattle-create_players.o `test -f 'create_players.c' || echo '$(srcdir)/'`create_players.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-create_players.Tpo $(DEPDIR)/seabattle-create_players.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='create_players.c' object='seabattle-create_players.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-create_players.o `test -f 'create_players.c' || echo '$(srcdir)/'`create_players.c

seabattle-create_players.obj: create_players.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-create_players.obj -MD -MP -MF $(DEPDIR)/seabattle-create_players.Tpo -c -o seabattle-create_players.obj `if test -f 'create_players.c'; then $(CYGPATH_W) 'create_players.c'; else $(CYGPATH_W) '$(srcdir)/create_players.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-create_players.Tpo $(DEPDIR)/seabattle-create_players.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='create_players.c' object='seabattle-create_players.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-create_players.obj `if test -f 'create_players.c'; then $(CYGPATH_W) 'create_players.c'; else $(CYGPATH_W) '$(srcdir)/create_players.c'; fi`

seabattle-emplace_ships.o: emplace_ships.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-emplace_ships.o -MD -MP -MF $(DEPDIR)/seabattle-emplace_ships.Tpo -c -o seabattle-emplace_ships.o `test -f 'emplace_ships.c' || echo '$(srcdir)/'`emplace_ships.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-emplace_ships.Tpo $(DEPDIR)/seabattle-emplace_ships.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='emplace_ships.c' object='seabattle-emplace_ships.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-emplace_ships.o `test -f 'emplace_ships.c' || echo '$(srcdir)/'`emplace_ships.c

seabattle-emplace_ships.obj: emplace_ships.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-emplace_ships.obj -MD -MP -MF $(DEPDIR)/seabattle-emplace_ships.Tpo -c -o seabattle-emplace_ships.obj `if test -f 'emplace_ships.c'; then $(CYGPATH_W) 'emplace_ships.c'; else $(CYGPATH_W) '$(srcdir)/emplace_ships.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-emplace_ships.Tpo $(DEPDIR)/seabattle-emplace_ships.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='emplace_ships.c' object='seabattle-emplace_ships.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-emplace_ships.obj `if test -f 'emplace_ships.c'; then $(CYGPATH_W) 'emplace_ships.c'; else $(CYGPATH_W) '$(srcdir)/emplace_ships.c'; fi`

seabattle-Field.o: Field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Field.o -MD -MP -MF $(DEPDIR)/seabattle-Field.Tpo -c -o seabattle-Field.o `test -f 'Field.c' || echo '$(srcdir)/'`Field.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Field.Tpo $(DEPDIR)/seabattle-Field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Field.c' object='seabattle-Field.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Field.o `test -f 'Field.c' || echo '$(srcdir)/'`Field.c

seabattle-Field.obj: Field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Field.obj -MD -MP -MF $(DEPDIR)/seabattle-Field.Tpo -c -o seabattle-Field.obj `if test -f 'Field.c'; then $(CYGPATH_W) 'Field.c'; else $(CYGPATH_W) '$(srcdir)/Field.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Field.Tpo $(DEPDIR)/seabattle-Field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Field.c' object='seabattle-Field.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Field.obj `if test -f 'Field.c'; then $(CYGPATH_W) 'Field.c'; else $(CYGPATH_W) '$(srcdir)/Field.c'; fi`

seabattle-finalize_field.o: finalize_field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-finalize_field.o -MD -MP -MF $(DEPDIR)/seabattle-finalize_field.Tpo -c -o seabattle-finalize_field.o `test -f 'finalize_field.c' || echo '$(srcdir)/'`finalize_field.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-finalize_field.Tpo $(DEPDIR)/seabattle-finalize_field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='finalize_field.c' object='seabattle-finalize_field.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-finalize_field.o `test -f 'finalize_field.c' || echo '$(srcdir)/'`finalize_field.c

seabattle-finalize_field.obj: finalize_field.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-finalize_field.obj -MD -MP -MF $(DEPDIR)/seabattle-finalize_field.Tpo -c -o seabattle-finalize_field.obj `if test -f 'finalize_field.c'; then $(CYGPATH_W) 'finalize_field.c'; else $(CYGPATH_W) '$(srcdir)/finalize_field.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-finalize_field.Tpo $(DEPDIR)/seabattle-finalize_field.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='finalize_field.c' object='seabattle-finalize_field.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-finalize_field.obj `if test -f 'finalize_field.c'; then $(CYGPATH_W) 'finalize_field.c'; else $(CYGPATH_W) '$(srcdir)/finalize_field.c'; fi`

seabattle-Fitting_ship.o: Fitting_ship.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Fitting_ship.o -MD -MP -MF $(DEPDIR)/seabattle-Fitting_ship.Tpo -c -o seabattle-Fitting_ship.o `test -f 'Fitting_ship.c' || echo '$(srcdir)/'`Fitting_ship.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Fitting_ship.Tpo $(DEPDIR)/seabattle-Fitting_ship.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Fitting_ship.c' object='seabattle-Fitting_ship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Fitting_ship.o `test -f 'Fitting_ship.c' || echo '$(srcdir)/'`Fitting_ship.c

seabattle-Fitting_ship.obj: Fitting_ship.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Fitting_ship.obj -MD -MP -MF $(DEPDIR)/seabattle-Fitting_ship.Tpo -c -o seabattle-Fitting_ship.obj `if test -f 'Fitting_ship.c'; then $(CYGPATH_W) 'Fitting_ship.c'; else $(CYGPATH_W) '$(srcdir)/Fitting_ship.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Fitting_ship.Tpo $(DEPDIR)/seabattle-Fitting_ship.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Fitting_ship.c' object='seabattle-Fitting_ship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Fitting_ship.obj `if test -f 'Fitting_ship.c'; then $(CYGPATH_W) 'Fitting_ship.c'; else $(CYGPATH_W) '$(srcdir)/Fitting_ship.c'; fi`

seabattle-Player.o: Player.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Player.o -MD -MP -MF $(DEPDIR)/seabattle-Player.Tpo -c -o seabattle-Player.o `test -f 'Player.c' || echo '$(srcdir)/'`Player.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Player.Tpo $(DEPDIR)/seabattle-Player.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Player.c' object='seabattle-Player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Player.o `test -f 'Player.c' || echo '$(srcdir)/'`Player.c

seabattle-Player.obj: Player.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Player.obj -MD -MP -MF $(DEPDIR)/seabattle-Player.Tpo -c -o seabattle-Player.obj `if test -f 'Player.c'; then $(CYGPATH_W) 'Player.c'; else $(CYGPATH_W) '$(srcdir)/Player.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Player.Tpo $(DEPDIR)/seabattle-Player.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Player.c' object='seabattle-Player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Player.obj `if test -f 'Player.c'; then $(CYGPATH_W) 'Player.c'; else $(CYGPATH_W) '$(srcdir)/Player.c'; fi`

seabattle-run_game.o: run_game.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-run_game.o -MD -MP -MF $(DEPDIR)/seabattle-run_game.Tpo -c -o seabattle-run_game.o `test -f 'run_game.c' || echo '$(srcdir)/'`run_game.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-run_game.Tpo $(DEPDIR)/seabattle-run_game.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='run_game.c' object='seabattle-run_game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-run_game.o `test -f 'run_game.c' || echo '$(srcdir)/'`run_game.c

seabattle-run_game.obj: run_game.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-run_game.obj -MD -MP -MF $(DEPDIR)/seabattle-run_game.Tpo -c -o seabattle-run_game.obj `if test -f 'run_game.c'; then $(CYGPATH_W) 'run_game.c'; else $(CYGPATH_W) '$(srcdir)/run_game.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-run_game.Tpo $(DEPDIR)/seabattle-run_game.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='run_game.c' object='seabattle-run_game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-run_game.obj `if test -f 'run_game.c'; then $(CYGPATH_W) 'run_game.c'; else $(CYGPATH_W) '$(srcdir)/run_game.c'; fi`

seabattle-Ship.o: Ship.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Ship.o -MD -MP -MF $(DEPDIR)/seabattle-Ship.Tpo -c -o seabattle-Ship.o `test -f 'Ship.c' || echo '$(srcdir)/'`Ship.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Ship.Tpo $(DEPDIR)/seabattle-Ship.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Ship.c' object='seabattle-Ship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Ship.o `test -f 'Ship.c' || echo '$(srcdir)/'`Ship.c

seabattle-Ship.obj: Ship.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-Ship.obj -MD -MP -MF $(DEPDIR)/seabattle-Ship.Tpo -c -o seabattle-Ship.obj `if test -f 'Ship.c'; then $(CYGPATH_W) 'Ship.c'; else $(CYGPATH_W) '$(srcdir)/Ship.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-Ship.Tpo $(DEPDIR)/seabattle-Ship.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Ship.c' object='seabattle-Ship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-Ship.obj `if test -f 'Ship.c'; then $(CYGPATH_W) 'Ship.c'; else $(CYGPATH_W) '$(srcdir)/Ship.c'; fi`

seabattle-shot.o: shot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-shot.o -MD -MP -MF $(DEPDIR)/seabattle-shot.Tpo -c -o seabattle-shot.o `test -f 'shot.c' || echo '$(srcdir)/'`shot.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-shot.Tpo $(DEPDIR)/seabattle-shot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='shot.c' object='seabattle-shot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-shot.o `test -f 'shot.c' || echo '$(srcdir)/'`shot.c

seabattle-shot.obj: shot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-shot.obj -MD -MP -MF $(DEPDIR)/seabattle-shot.Tpo -c -o seabattle-shot.obj `if test -f 'shot.c'; then $(CYGPATH_W) 'shot.c'; else $(CYGPATH_W) '$(srcdir)/shot.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-shot.Tpo $(DEPDIR)/seabattle-shot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='shot.c' object='seabattle-shot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-shot.obj `if test -f 'shot.c'; then $(CYGPATH_W) 'shot.c'; else $(CYGPATH_W) '$(srcdir)/shot.c'; fi`

seabattle-input_name.o: input_name.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-input_name.o -MD -MP -MF $(DEPDIR)/seabattle-input_name.Tpo -c -o seabattle-input_name.o `test -f 'input_name.c' || echo '$(srcdir)/'`input_name.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-input_name.Tpo $(DEPDIR)/seabattle-input_name.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='input_name.c' object='seabattle-input_name.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-input_name.o `test -f 'input_name.c' || echo '$(srcdir)/'`input_name.c

seabattle-input_name.obj: input_name.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-input_name.obj -MD -MP -MF $(DEPDIR)/seabattle-input_name.Tpo -c -o seabattle-input_name.obj `if test -f 'input_name.c'; then $(CYGPATH_W) 'input_name.c'; else $(CYGPATH_W) '$(srcdir)/input_name.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-input_name.Tpo $(DEPDIR)/seabattle-input_name.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='input_name.c' object='seabattle-input_name.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-input_name.obj `if test -f 'input_name.c'; then $(CYGPATH_W) 'input_name.c'; else $(CYGPATH_W) '$(srcdir)/input_name.c'; fi`

seabattle-print_winner.o: print_winner.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_winner.o -MD -MP -MF $(DEPDIR)/seabattle-print_winner.Tpo -c -o seabattle-print_winner.o `test -f 'print_winner.c' || echo '$(srcdir)/'`print_winner.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_winner.Tpo $(DEPDIR)/seabattle-print_winner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_winner.c' object='seabattle-print_winner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_winner.o `test -f 'print_winner.c' || echo '$(srcdir)/'`print_winner.c

seabattle-print_winner.obj: print_winner.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_winner.obj -MD -MP -MF $(DEPDIR)/seabattle-print_winner.Tpo -c -o seabattle-print_winner.obj `if test -f 'print_winner.c'; then $(CYGPATH_W) 'print_winner.c'; else $(CYGPATH_W) '$(srcdir)/print_winner.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_winner.Tpo $(DEPDIR)/seabattle-print_winner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_winner.c' object='seabattle-print_winner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_winner.obj `if test -f 'print_winner.c'; then $(CYGPATH_W) 'print_winner.c'; else $(CYGPATH_W) '$(srcdir)/print_winner.c'; fi`

seabattle-draw_frame.o: draw_frame.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-draw_frame.o -MD -MP -MF $(DEPDIR)/seabattle-draw_frame.Tpo -c -o seabattle-draw_frame.o `test -f 'draw_frame.c' || echo '$(srcdir)/'`draw_frame.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-draw_frame.Tpo $(DEPDIR)/seabattle-draw_frame.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='draw_frame.c' object='seabattle-draw_frame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-draw_frame.o `test -f 'draw_frame.c' || echo '$(srcdir)/'`draw_frame.c

seabattle-draw_frame.obj: draw_frame.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-draw_frame.obj -MD -MP -MF $(DEPDIR)/seabattle-draw_frame.Tpo -c -o seabattle-draw_frame.obj `if test -f 'draw_frame.c'; then $(CYGPATH_W) 'draw_frame.c'; else $(CYGPATH_W) '$(srcdir)/draw_frame.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-draw_frame.Tpo $(DEPDIR)/seabattle-draw_frame.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='draw_frame.c' object='seabattle-draw_frame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-draw_frame.obj `if test -f 'draw_frame.c'; then $(CYGPATH_W) 'draw_frame.c'; else $(CYGPATH_W) '$(srcdir)/draw_frame.c'; fi`

seabattle-draw_frame_around_cell.o: draw_frame_around_cell.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-draw_frame_around_cell.o -MD -MP -MF $(DEPDIR)/seabattle-draw_frame_around_cell.Tpo -c -o seabattle-draw_frame_around_cell.o `test -f 'draw_frame_around_cell.c' || echo '$(srcdir)/'`draw_frame_around_cell.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-draw_frame_around_cell.Tpo $(DEPDIR)/seabattle-draw_frame_around_cell.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='draw_frame_around_cell.c' object='seabattle-draw_frame_around_cell.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-draw_frame_around_cell.o `test -f 'draw_frame_around_cell.c' || echo '$(srcdir)/'`draw_frame_around_cell.c

seabattle-draw_frame_around_cell.obj: draw_frame_around_cell.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-draw_frame_around_cell.obj -MD -MP -MF $(DEPDIR)/seabattle-draw_frame_around_cell.Tpo -c -o seabattle-draw_frame_around_cell.obj `if test -f 'draw_frame_around_cell.c'; then $(CYGPATH_W) 'draw_frame_around_cell.c'; else $(CYGPATH_W) '$(srcdir)/draw_frame_around_cell.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-draw_frame_around_cell.Tpo $(DEPDIR)/seabattle-draw_frame_around_cell.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='draw_frame_around_cell.c' object='seabattle-draw_frame_around_cell.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-draw_frame_around_cell.obj `if test -f 'draw_frame_around_cell.c'; then $(CYGPATH_W) 'draw_frame_around_cell.c'; else $(CYGPATH_W) '$(srcdir)/draw_frame_around_cell.c'; fi`

seabattle-print_fields.o: print_fields.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_fields.o -MD -MP -MF $(DEPDIR)/seabattle-print_fields.Tpo -c -o seabattle-print_fields.o `test -f 'print_fields.c' || echo '$(srcdir)/'`print_fields.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_fields.Tpo $(DEPDIR)/seabattle-print_fields.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_fields.c' object='seabattle-print_fields.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_fields.o `test -f 'print_fields.c' || echo '$(srcdir)/'`print_fields.c

seabattle-print_fields.obj: print_fields.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -MT seabattle-print_fields.obj -MD -MP -MF $(DEPDIR)/seabattle-print_fields.Tpo -c -o seabattle-print_fields.obj `if test -f 'print_fields.c'; then $(CYGPATH_W) 'print_fields.c'; else $(CYGPATH_W) '$(srcdir)/print_fields.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/seabattle-print_fields.Tpo $(DEPDIR)/seabattle-print_fields.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='print_fields.c' object='seabattle-print_fields.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(seabattle_CFLAGS) $(CFLAGS) -c -o seabattle-print_fields.obj `if test -f 'print_fields.c'; then $(CYGPATH_W) 'print_fields.c'; else $(CYGPATH_W) '$(srcdir)/print_fields.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
